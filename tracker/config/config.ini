[network_control]
# virtual subnet will be NATed via the host NIC
# only support /24 prefix, bridge ip being the 1st IP of the subnet
# DHCP IP range: [2,254] of the subnet IP range
subnet = 192.168.122.0/24
# DNS server
dns_server = 8.8.8.8
# network control mode, 0: block, 1: rate_limit
# block: all traffic is blocked except C2 and DNS traffic
# rate_limit: all outgoing traffic is allowed but rate limited
mode = 0

# web traffic redirection, only for block mode
# traffic to this ports are allowed but redirected to simulated_server
redirected_tcp_ports = 80,443
# internal simulated server
simulated_server = 192.168.88.213

# rate limiting
# enabled for both network control modes
# peak: peak bandwidth in kB/s
# average: average bandwidth in kB/s
# burst: burst bandwidth in kB/s
# network level rate limiting
network_peak = 96
network_average = 64
network_burst = 96
# port level rate limiting
port_peak = 96
port_average = 64
port_burst = 96
# port level maximum connection limitation
port_max_conn = 1000

# traffic monitoring
[interface_monitor]
iface = eno1
excluded_ips = 192.168.88.213,8.8.8.8
# action when violation detected
# 0: tear down the tool, 1: alarm
action = 1

[scheduler]
# scheduler mode, 0: manual, 1: auto
mode = 0
# vcpu quota of a physical core in percentage
sandbox_vcpu_quota = 20
# maximum number of sandboxes allowed
max_sandbox_num = 24
# maximum dormant duration allowed in auto scheduler mode
max_dormant_duration = 24
# maximum duration to probe whether a bot is activated
bot_probing_duration = 1200
# allow duplicate bots within the same botnet
allow_duplicate_bots = no
# maximum allowed candidate C2s, if exceeds, only for the latest max_cnc_candidates
max_cnc_candidates = 100

[packet_analyzer]
# packet capture filter, filter out known scans
bpf_filter=not stp and not arp and not (tcp dst port 23 or tcp dst port 2323)
# ips excluded from attack analyzing
excluded_ips = 192.168.88.213,8.8.8.8,192.168.122.1
# maximum packet analyzing workers
max_analyzing_workers = 2
# min attempts (SYN packets) to an IP before it is treated as an candidate C2
min_cnc_attempts = 2
# attack gap in seconds, exceeding which indicating a new attack
attack_gap = 900
# minimal attack packets
min_attack_packets = 30
# number of packets triggering attack detection
attack_detection_watermark = 5

[database]
host = localhost
port = 5432
dbname = botnet_tracker
user = postgres
password = botnet

[local_bot_repo]
ip = 192.168.88.213
user = remnux
path = /home/remnux/code/bot-tracker/downloader/malware_repo
