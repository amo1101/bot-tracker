[tracker]
id = 0

[network_control]
mode = 0                                    ; network mode, 0: block, 1: rate_limit
dns_rate_limit = 1000                       ; rate limit for outging dns traffic, packets per second
https_proxy_port = 10443                    ; proxy for https traffic, require PolarProxy on the host

[network_control.block]
allowed_tcp_ports = 80,443                  ; traffic to this ports are allowed but redirected to simulated_server
simulated_server = 192.168.100.4            ; internal simulated server

[network_control.rate_limit]
network_peak = 96                           ; network peak bandwidth in kB/s
network_average = 64                        ; network average bandwidth in kB/s
network_burst = 96                          ; network burst bandwith in kB/s
port_peak = 96                              ; port peak bandwidth in kB/s
port_average = 64                           ; port average bandwidth in kB/s
port_burst = 96                             ; port burst bandwidth in kB/s
port_max_conn = 10                          ; maximum tcp connection limit per sandbox

[scheduler]
mode = 0                                    ; scheduler mode, 0: manual, 1: auto
monitor_on_iface = ens160                   ; traffic monitoring in block network mode, stop the bot once outgoing attack traffic detected
sandbox_vcpu_quota = 25                     ; vcpu quota of a physical core in percentage
max_sandbox_num = 30                        ; maximum number of sandboxes allowed
max_dormant_duration = 24                   ; maximum dormant duration allowed in auto scheduler mode
max_packet_analyzing_workers = 2            ; maximum packet analyzing workers
cnc_probing_duration = 300                  ; C2 server probing duration
checkpoint_interval = 10

[database]
host = localhost
port = 5432
dbname = botnet_tracker
user = postgres
password = botnet

[local_bot_repo]
ip = 192.168.100.4
user = frank
path = /home/frank/code/bot-tracker/downloader/malware_repo
